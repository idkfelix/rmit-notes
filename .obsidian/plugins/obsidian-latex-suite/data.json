{
  "snippets": "[\n// Handy\n{trigger: \"@fa\", replacement: \"\\\\forall{$0}\", options: \"mA\"},\n{trigger: \"@ex\", replacement: \"\\\\exists{$0}\", options: \"mA\"},\n{trigger: \"xPx\", replacement: \"xP(x)\", options: \"mA\"},\n    \n// Math mode\n{trigger: \"mk\", replacement: \"$\\\\large $0$\", options: \"tA\"},\n{trigger: \"dm\", replacement: \"$$\\n\\\\begin{align*}\\n$0\\n\\\\end{align*}\\n$$\", options: \"tAw\"},\n    \n{trigger: \"beg\", replacement: \"\\\\begin{$0}\\n$1\\n\\\\end{$0}\", options: \"mA\"},\n{trigger: \"cases\", replacement: \"\\\\begin{cases}\\n$0\\n\\\\end{cases}\", options: \"mA\"},\n{trigger: \"align\", replacement: \"\\\\begin{align}\\n$0\\n\\\\end{align}\", options: \"mA\"},\n{trigger: \"array\", replacement: \"\\\\begin{array}\\n$0\\n\\\\end{array}\", options: \"mA\"},\n    \n{trigger: \"text\", replacement: \"\\\\text{$0}$1\", options: \"mA\"},\n{trigger: \"\\\"\", replacement: \"\\\\text{$0}$1\", options: \"mA\"},\n{trigger: \"rm\", replacement: \"\\\\mathrm{$0}$1\", options: \"mA\"},\n\n{trigger: \"hat\", replacement: \"\\\\hat{$0}$1\", options: \"mA\"},\n{trigger: \"bar\", replacement: \"\\\\bar{$0}$1\", options: \"mA\"},\n{trigger: \"cdot\", replacement: \"\\\\cdot\", options: \"mA\"},\n\n{trigger: \"+-\", replacement: \"\\\\pm\", options: \"mA\"},\n{trigger: \"-+\", replacement: \"\\\\mp\", options: \"mA\"},\n{trigger: \"...\", replacement: \"\\\\dots\", options: \"mA\"},\n\n{trigger: \"neg\", replacement: \"\\\\neg{$0}\", options: \"mA\"},\n{trigger: \"===\", replacement: \"\\\\equiv\", options: \"mA\"},\n{trigger: \"!=\", replacement: \"\\\\neq\", options: \"mA\"},\n{trigger: \">=\", replacement: \"\\\\geq\", options: \"mA\"},\n{trigger: \"<=\", replacement: \"\\\\leq\", options: \"mA\"},\n{trigger: \">>\", replacement: \"\\\\gg\", options: \"mA\"},\n{trigger: \"<<\", replacement: \"\\\\ll\", options: \"mA\"},\n{trigger: \"simm\", replacement: \"\\\\sim\", options: \"mA\"},\n{trigger: \"sim=\", replacement: \"\\\\simeq\", options: \"mA\"},\n\n{trigger: \"<->\", replacement: \"\\\\leftrightarrow \", options: \"mA\"},\n{trigger: \"->\", replacement: \"\\\\to\", options: \"mA\"},\n{trigger: \"!>\", replacement: \"\\\\mapsto\", options: \"mA\"},\n{trigger: \"=>\", replacement: \"\\\\implies\", options: \"mA\"},\n{trigger: \"=<\", replacement: \"\\\\impliedby\", options: \"mA\"},\n\n{trigger: \"and\", replacement: \"\\\\land\", options: \"mA\"},\n{trigger: \"orr\", replacement: \"\\\\lor\", options: \"mA\"},\n{trigger: \"inn\", replacement: \"\\\\in\", options: \"mA\"},\n{trigger: \"notin\", replacement: \"\\\\not\\\\in\", options: \"mA\"},\n{trigger: \"sub=\", replacement: \"\\\\subseteq\", options: \"mA\"},\n{trigger: \"sup=\", replacement: \"\\\\supseteq\", options: \"mA\"},\n{trigger: \"eset\", replacement: \"\\\\emptyset\", options: \"mA\"},\n{trigger: \"set\", replacement: \"\\\\{ $0 \\\\}$1\", options: \"mA\"},\n\n{trigger: \"LL\", replacement: \"\\\\mathcal{L}\", options: \"mA\"},\n{trigger: \"HH\", replacement: \"\\\\mathcal{H}\", options: \"mA\"},\n{trigger: \"CC\", replacement: \"\\\\mathbb{C}\", options: \"mA\"},\n{trigger: \"RR\", replacement: \"\\\\mathbb{R}\", options: \"mA\"},\n{trigger: \"ZZ\", replacement: \"\\\\mathbb{Z}\", options: \"mA\"},\n{trigger: \"NN\", replacement: \"\\\\mathbb{N}\", options: \"mA\"},\n\n// Brackets\n{trigger: \"avg\", replacement: \"\\\\langle $0 \\\\rangle $1\", options: \"mA\"},\n{trigger: \"norm\", replacement: \"\\\\lvert $0 \\\\rvert $1\", options: \"mA\", priority: 1},\n{trigger: \"Norm\", replacement: \"\\\\lVert $0 \\\\rVert $1\", options: \"mA\", priority: 1},\n{trigger: \"ceil\", replacement: \"\\\\lceil $0 \\\\rceil $1\", options: \"mA\"},\n{trigger: \"floor\", replacement: \"\\\\lfloor $0 \\\\rfloor $1\", options: \"mA\"},\n{trigger: \"mod\", replacement: \"|$0|$1\", options: \"mA\"},\n    \n{trigger: \"(\", replacement: \"(${VISUAL})\", options: \"mA\"},\n{trigger: \"[\", replacement: \"[${VISUAL}]\", options: \"mA\"},\n{trigger: \"{\", replacement: \"{${VISUAL}}\", options: \"mA\"},\n{trigger: \"(\", replacement: \"($0)$1\", options: \"mA\"},\n{trigger: \"{\", replacement: \"{$0}$1\", options: \"mA\"},\n{trigger: \"[\", replacement: \"[$0]$1\", options: \"mA\"},\n{trigger: \"lr(\", replacement: \"\\\\left( $0 \\\\right) $1\", options: \"mA\"},\n{trigger: \"lr{\", replacement: \"\\\\left\\\\{ $0 \\\\right\\\\} $1\", options: \"mA\"},\n{trigger: \"lr[\", replacement: \"\\\\left[ $0 \\\\right] $1\", options: \"mA\"},\n{trigger: \"lr|\", replacement: \"\\\\left| $0 \\\\right| $1\", options: \"mA\"},\n{trigger: \"lra\", replacement: \"\\\\left< $0 \\\\right> $1\", options: \"mA\"},\n\n// Convert standalone letters in text to math (except a, A, I).\n{trigger: /([^'])\\b([B-HJ-Zb-z])\\b([\\n\\s.,?!:'])/, replacement: \"[[0]]$\\\\large [[1]]$[[2]]\", options: \"tA\"}\n]\n",
  "snippetVariables": "{\n\t\"${GREEK}\": \"alpha|beta|gamma|Gamma|delta|Delta|epsilon|varepsilon|zeta|eta|theta|vartheta|Theta|iota|kappa|lambda|Lambda|mu|nu|xi|omicron|pi|rho|varrho|sigma|Sigma|tau|upsilon|Upsilon|phi|varphi|Phi|chi|psi|omega|Omega\",\n\t\"${SYMBOL}\": \"parallel|perp|partial|nabla|hbar|ell|infty|oplus|ominus|otimes|oslash|square|star|dagger|vee|wedge|subseteq|subset|supseteq|supset|emptyset|exists|nexists|forall|implies|impliedby|iff|setminus|neg|lor|land|bigcup|bigcap|cdot|times|simeq|approx\",\n\t\"${MORE_SYMBOLS}\": \"leq|geq|neq|gg|ll|equiv|sim|propto|rightarrow|leftarrow|Rightarrow|Leftarrow|leftrightarrow|to|mapsto|cap|cup|in|sum|prod|exp|ln|log|det|dots|vdots|ddots|pm|mp|int|iint|iiint|oint\"\n}\n",
  "snippetsEnabled": true,
  "snippetsTrigger": "Tab",
  "suppressSnippetTriggerOnIME": true,
  "removeSnippetWhitespace": true,
  "autoDelete$": true,
  "loadSnippetsFromFile": false,
  "loadSnippetVariablesFromFile": false,
  "snippetsFileLocation": "",
  "snippetVariablesFileLocation": "",
  "concealEnabled": false,
  "concealRevealTimeout": 0,
  "colorPairedBracketsEnabled": true,
  "highlightCursorBracketsEnabled": true,
  "mathPreviewEnabled": true,
  "mathPreviewPositionIsAbove": true,
  "autofractionEnabled": true,
  "autofractionSymbol": "\\frac",
  "autofractionBreakingChars": "+-=\t",
  "matrixShortcutsEnabled": true,
  "taboutEnabled": true,
  "autoEnlargeBrackets": true,
  "wordDelimiters": "., +-\\n\t:;!?\\/{}[]()=~$",
  "autofractionExcludedEnvs": "[\n\t\t[\"^{\", \"}\"],\n\t\t[\"\\\\pu{\", \"}\"]\n\t]",
  "matrixShortcutsEnvNames": "pmatrix, cases, align, gather, bmatrix, Bmatrix, vmatrix, Vmatrix, array, matrix",
  "autoEnlargeBracketsTriggers": "sum, int, frac, prod, bigcup, bigcap",
  "forceMathLanguages": "math"
}